<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Interactive Linked List Visualization</title>
  <style>
    .node {
      display: inline-block;
      padding: 10px 20px;
      margin: 10px;
      background-color: #4CAF50;
      color: white;
      font-weight: bold;
      border-radius: 5px;
    }
    .arrow {
      display: inline-block;
      margin: 0 10px;
      font-size: 20px;
    }
    #controls {
      margin: 20px 0;
    }
  </style>
</head>
<body>

<h2>Interactive Linked List Visualization</h2>
<div id="controls">
  <input type="number" id="nodeValue" placeholder="Enter node value" />
  <button onclick="addNodeAtEnd()">Add Node at End</button>
  <button onclick="addNodeAtFront()">Add Node at Front</button>
  <br><br>
  <input type="number" id="nodePosition" placeholder="Enter position" />
  <button onclick="addNodeAtPosition()">Add Node at Position</button>
</div>
<div id="linkedList"></div>

<script>
  // Node class
  class Node {
    constructor(value) {
      this.value = value;
      this.next = null;
    }
  }

  // LinkedList class
  class LinkedList {
    constructor() {
      this.head = null;
    }

    // Insert a new node at the end
    append(value) {
      const newNode = new Node(value);
      if (!this.head) {
        this.head = newNode;
      } else {
        let current = this.head;
        while (current.next) {
          current = current.next;
        }
        current.next = newNode;
      }
      this.render();
    }

    // Insert a new node at the beginning
    prepend(value) {
      const newNode = new Node(value);
      newNode.next = this.head;
      this.head = newNode;
      this.render();
    }

    // Insert a node at a specific position
    insertAtPosition(value, position) {
      const newNode = new Node(value);
      if (position <= 1 || !this.head) {
        this.prepend(value);
        return;
      }
      let current = this.head;
      let count = 1;
      while (current && count < position - 1) {
        current = current.next;
        count++;
      }
      if (current) {
        newNode.next = current.next;
        current.next = newNode;
      } else {
        alert("Position out of bounds. Adding at the end.");
        this.append(value);
      }
      this.render();
    }

    // Render the linked list to HTML
    render() {
      const container = document.getElementById("linkedList");
      container.innerHTML = "";
      let current = this.head;
      while (current) {
        // Create node element
        const nodeElem = document.createElement("div");
        nodeElem.className = "node";
        nodeElem.innerText = current.value;
        container.appendChild(nodeElem);

        // Add arrow if there's a next node
        if (current.next) {
          const arrowElem = document.createElement("span");
          arrowElem.className = "arrow";
          arrowElem.innerHTML = "&#8594;";
          container.appendChild(arrowElem);
        }

        current = current.next;
      }
    }
  }

  // Initialize linked list
  const linkedList = new LinkedList();

  // Functions to add nodes at specific positions
  function addNodeAtEnd() {
    const value = document.getElementById("nodeValue").value;
    if (value !== "") {
      linkedList.append(parseInt(value));
      document.getElementById("nodeValue").value = "";
    } else {
      alert("Please enter a value to add a node.");
    }
  }

  function addNodeAtFront() {
    const value = document.getElementById("nodeValue").value;
    if (value !== "") {
      linkedList.prepend(parseInt(value));
      document.getElementById("nodeValue").value = "";
    } else {
      alert("Please enter a value to add a node.");
    }
  }

  function addNodeAtPosition() {
    const value = document.getElementById("nodeValue").value;
    const position = document.getElementById("nodePosition").value;
    if (value !== "" && position !== "") {
      linkedList.insertAtPosition(parseInt(value), parseInt(position));
      document.getElementById("nodeValue").value = "";
      document.getElementById("nodePosition").value = "";
    } else {
      alert("Please enter a value and position to add a node.");
    }
  }
</script>

</body>
</html>
