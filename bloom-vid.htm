<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MY LEARNING Labs - Bloom Filter</title>
    <style>
        /* General styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            color: #ffffff;
            background: linear-gradient(45deg, #73EC8B 50%, #54C392 50%, #15B392 50%);
            background-size: 400% 400%;
            animation: gradientShift 10s ease infinite;
            display: flex;
            flex-direction: column;
            height: 100vh;
            align-items: center;
        }

        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        header {
            background-color: rgba(0, 0, 0, 0.7);
            padding: 15px 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            width: 100%;
        }

        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo img {
            height: 50px;
        }

        nav ul {
            display: flex;
            list-style: none;
        }

        nav a {
            color: #f0f0f0;
            text-decoration: none;
            padding: 8px;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        nav a:hover {
            color: #fff;
            text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.3);
        }

        main {
            display: flex;
            gap: 20px;
            padding: 30px 0;
            justify-content: center;
            align-items: flex-start;
            width: 100%;
            flex: 1;
        }

        h1 {
            text-align: center;
            color: #683ef0;
        }

        .sidebar {
            width: 25%;
            background: #433878;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            height: fit-content;
        }

        .sidebar ul {
            list-style: none;
        }

        .sidebar a {
            color: #6c87f5;
            display: block;
            padding: 10px;
            margin-bottom: 8px;
            background-color: rgba(108, 135, 245, 0.1);
            border-radius: 5px;
            text-decoration: none;
            transition: background-color 0.3s ease;
        }

        .sidebar a:hover {
            background-color: #517ed2;
            color: #fff;
        }

        .content {
            width: 70%;
            background: #000000;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            color: #ffffff;
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
        }

        .bloom-filter {
            margin-top: 20px;
            display: flex;
            gap: 10px;
            justify-content: center;
            align-items: center;
        }

        .filter-bit {
            width: 30px;
            height: 30px;
            background-color: #333;
            border-radius: 4px;
            display: inline-block;
            text-align: center;
            line-height: 30px;
            font-size: 14px;
            font-weight: bold;
            color: #fff;
            transition: background-color 0.3s ease;
        }

        .filter-bit.active {
            background-color: #517ed2;
        }

        .controls {
            margin-top: 20px;
            display: flex;
            gap: 10px;
            justify-content: center;
            align-items: center;
        }

        .hash-info {
            margin-top: 15px;
            font-size: 14px;
            color: #cccccc;
        }

        footer {
            background-color: #444;
            color: #fff;
            padding: 15px 0;
            text-align: center;
            width: 100%;
        }
    </style>
</head>
<body>

<header>
    <div class="container">
        <nav>
            <div class="logo">
                <img src="logo.png" alt="MY LEARNING Labs Logo">
            </div>
            <ul>
                <li><a href="./MAIN.html">HOME</a></li>
                <li><a href="./contributors.htm">CONTRIBUTORS</a></li>
                <li><a href="./contact.htm">CONTACT</a></li>
            </ul>
        </nav>
    </div>
</header>

<main>
    <div class="sidebar">
        <ul>
            <li><a href="./bloom-overview.htm">Overview</a></li>
            <li><a href="./bloom-pretest.htm">Pretest</a></li>
            <li><a href="./bloom-vid.htm">Bloom's Algorithm</a></li>
            <li><a href="./bloom-analysis.htm">Analysis</a></li>
            <li><a href="./bloom-posttest.htm">Posttest</a></li>
        </ul>
    </div>

    <div class="content">
        <h1>Bloom Filter Visualization</h1>
        <p>This visualization simulates a basic Bloom Filter. Add elements to see which filter bits are set.</p>

        <div class="bloom-filter" id="bloom-filter">
            <!-- Dynamic filter bits will go here -->
        </div>

        <div class="controls">
            <input type="text" id="input-element" placeholder="Enter an element">
            <button onclick="addElement()">Add Element</button>
        </div>

        <div class="hash-info" id="hash-info">
            <!-- Hash function information will be displayed here -->
        </div>
    </div>
</main>

<footer>
    <div class="container">
        <p>&copy; 2024 Learning Labs. All rights reserved.</p>
    </div>
</footer>

<script>
    const filterSize = 10;  // Number of bits in the Bloom Filter
    const bloomFilter = new Array(filterSize).fill(0);
    const bloomFilterElement = document.getElementById('bloom-filter');
    const hashInfoElement = document.getElementById('hash-info');

    // Initialize Bloom Filter display
    function initializeFilter() {
        bloomFilterElement.innerHTML = '';
        for (let i = 0; i < filterSize; i++) {
            const bitElement = document.createElement('div');
            bitElement.classList.add('filter-bit');
            bitElement.id = 'bit-' + i;
            bitElement.innerText = '0';
            bloomFilterElement.appendChild(bitElement);
        }
    }

    // Hash functions
    function hash1(str) {
        return str.charCodeAt(0) % filterSize;
    }

    function hash2(str) {
        return (str.charCodeAt(0) + str.length) % filterSize;
    }

    // Add element to Bloom Filter with delay and hash info
    function addElement() {
        const element = document.getElementById('input-element').value;
        if (element === '') return;

        const hash1Index = hash1(element);
        const hash2Index = hash2(element);

        hashInfoElement.innerHTML = `Hash Function 1 (Index: ${hash1Index}), Hash Function 2 (Index: ${hash2Index})`;

        setTimeout(() => {
            bloomFilter[hash1Index] = 1;
            document.getElementById('bit-' + hash1Index).classList.add('active');
            document.getElementById('bit-' + hash1Index).innerText = '1';
        }, 500);

        setTimeout(() => {
            bloomFilter[hash2Index] = 1;
            document.getElementById('bit-' + hash2Index).classList.add('active');
            document.getElementById('bit-' + hash2Index).innerText = '1';
        }, 1000);

        document.getElementById('input-element').value = '';
    }

    initializeFilter();
</
