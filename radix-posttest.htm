<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MY LEARNING Labs - Posttest</title>
    <link rel="stylesheet" href="css_m.css">
</head>

<body>
    <header>
        <div class="container">
            <nav>
                <div class="logo">
                    <img src="logo.png" alt="MY LEARNING Labs Logo">
                </div>
                <ul>
                    <li><a href="./home.htm">HOME</a></li>
                    <li><a href="./contributors.htm">CONTRIBUTORS</a></li>
                    <li><a href="./contacts.htm">CONTACT</a></li>
                </ul>
            </nav>
        </div>
    </header>
    
    <main>
        <div class="container">
            <h1>Posttest</h1>
            <center><h2>Radix Algorithm Posttest</h2></center>
            <div class="content">
                <div class="sidebar">
                    <ul>
                        <li><a href="./main.htm">Overview</a></li>
                        <li><a href="./radix-overview.htm">Recap</a></li>
                        <li><a href="./radix-pretest.htm">Pretest</a></li>
                        <li><a href="#">Divide and Conquer</a></li>
                        <li><a href="radix-vid.htm">Radix sort Algorithm</a></li>
                        <li><a href="./radix-analysis.htm">Analysis</a></li>
                        <li><a href="kadane-posttest.htm">Posttest</a></li>
                        <li><a href="#">Further Readings/References</a></li>
                        <li><a href="#">Feedback</a></li>
                    </ul>
                </div>

                <ol>
                    <li>
                        <p>What is the primary strategy of Radix Sort?</p>
                        <ul>
                            <li><input type="radio" id="q1a" name="q1" value="a"><label for="q1a">A) Comparison-based sorting</label></li>
                            <li><input type="radio" id="q1b" name="q1" value="b"><label for="q1b">B) Distribution-based sorting</label></li>
                            <li><input type="radio" id="q1c" name="q1" value="c"><label for="q1c">C) In-place sorting</label></li>
                            <li><input type="radio" id="q1d" name="q1" value="d"><label for="q1d">D) Merging sorted lists</label></li>
                        </ul>
                    </li>

                    <li>
                        <p>Which of the following statements is true about Radix Sort?</p>
                        <ul>
                            <li><input type="radio" id="q2a" name="q2" value="a"><label for="q2a">A) It can only sort integers.</label></li>
                            <li><input type="radio" id="q2b" name="q2" value="b"><label for="q2b">B) It is an unstable sorting algorithm.</label></li>
                            <li><input type="radio" id="q2c" name="q2" value="c"><label for="q2c">C) It can sort strings based on lexicographical order.</label></li>
                            <li><input type="radio" id="q2d" name="q2" value="d"><label for="q2d">D) It requires more memory than Quick Sort.</label></li>
                        </ul>
                    </li>

                    <li>
                        <p>Radix Sort sorts numbers by processing which of the following?</p>
                        <ul>
                            <li><input type="radio" id="q3a" name="q3" value="a"><label for="q3a">A) The digits from the most significant to the least significant</label></li>
                            <li><input type="radio" id="q3b" name="q3" value="b"><label for="q3b">B) The digits from the least significant to the most significant</label></li>
                            <li><input type="radio" id="q3c" name="q3" value="c"><label for="q3c">C) The binary representations of the numbers</label></li>
                            <li><input type="radio" id="q3d" name="q3" value="d"><label for="q3d">D) The entire number at once</label></li>
                        </ul>
                    </li>

                    <li>
                        <p>What is the time complexity of Radix Sort when sorting n numbers with d digits?</p>
                        <ul>
                            <li><input type="radio" id="q4a" name="q4" value="a"><label for="q4a">A) O(n log n)</label></li>
                            <li><input type="radio" id="q4b" name="q4" value="b"><label for="q4b">B) O(n<sup>2</sup>)</label></li>
                            <li><input type="radio" id="q4c" name="q4" value="c"><label for="q4c">C) O(n * d)</label></li>
                            <li><input type="radio" id="q4d" name="q4" value="d"><label for="q4d">D) O(d * log n)</label></li>
                        </ul>
                    </li>

                    <li>
                        <p>In Radix Sort, which sorting algorithm is typically used as a subroutine for sorting digits?</p>
                        <ul>
                            <li><input type="radio" id="q5a" name="q5" value="a"><label for="q5a">A) Quick Sort</label></li>
                            <li><input type="radio" id="q5b" name="q5" value="b"><label for="q5b">B) Heap Sort</label></li>
                            <li><input type="radio" id="q5c" name="q5" value="c"><label for="q5c">C) Counting Sort</label></li>
                            <li><input type="radio" id="q5d" name="q5" value="d"><label for="q5d">D) Merge Sort</label></li>
                        </ul>
                    </li>

                    <li>
                        <p>Which of the following is a requirement for Radix Sort to be efficient?</p>
                        <ul>
                            <li><input type="radio" id="q6a" name="q6" value="a"><label for="q6a">A) The range of input data must be small.</label></li>
                            <li><input type="radio" id="q6b" name="q6" value="b"><label for="q6b">B) The input data must be sorted initially.</label></li>
                            <li><input type="radio" id="q6c" name="q6" value="c"><label for="q6c">C) The numbers must be positive.</label></li>
                            <li><input type="radio" id="q6d" name="q6" value="d"><label for="q6d">D) The input data must be integers only.</label></li>
                        </ul>
                    </li>

                    <li>
                        <p>Radix Sort can be described as a stable sort. What does "stable" mean in this context?</p>
                        <ul>
                            <li><input type="radio" id="q7a" name="q7" value="a"><label for="q7a">A) It uses less memory than other sorts.</label></li>
                            <li><input type="radio" id="q7b" name="q7" value="b"><label for="q7b">B) Equal elements maintain their relative order.</label></li>
                            <li><input type="radio" id="q7c" name="q7" value="c"><label for="q7c">C) It always produces the same output for the same input.</label></li>
                            <li><input type="radio" id="q7d" name="q7" value="d"><label for="q7d">D) It can sort large datasets efficiently.</label></li>
                        </ul>
                    </li>

                    <li>
                        <p>Which of the following scenarios would be best suited for using Radix Sort?</p>
                        <ul>
                            <li><input type="radio" id="q8a" name="q8" value="a"><label for="q8a">A) Sorting a list of floating-point numbers.</label></li>
                            <li><input type="radio" id="q8b" name="q8" value="b"><label for="q8b">B) Sorting a small list of strings.</label></li>
                            <li><input type="radio" id="q8c" name="q8" value="c"><label for="q8c">C) Sorting a large list of integers with a small range of values.</label></li>
                            <li><input type="radio" id="q8d" name="q8" value="d"><label for="q8d">D) Sorting a list of complex objects.</label></li>
                        </ul>
                    </li>

                    <li>
                        <p>What is a limitation of Radix Sort?</p>
                        <ul>
                            <li><input type="radio" id="q9a" name="q9" value="a"><label for="q9a">A) It cannot sort negative numbers.</label></li>
                            <li><input type="radio" id="q9b" name="q9" value="b"><label for="q9b">B) It is not a comparison-based sort.</label></li>
                            <li><input type="radio" id="q9c" name="q9" value="c"><label for="q9c">C) It requires additional space proportional to the input size.</label></li>
                            <li><input type="radio" id="q9d" name="q9" value="d"><label for="q9d">D) It cannot handle large datasets.</label></li>
                        </ul>
                    </li>

                    <li>
                        <p>Which sorting algorithm can be considered a precursor to Radix Sort?</p>
                        <ul>
                            <li><input type="radio" id="q10a" name="q10" value="a"><label for="q10a">A) Bucket Sort</label></li>
                            <li><input type="radio" id="q10b" name="q10" value="b"><label for="q10b">B) Merge Sort</label></li>
                            <li><input type="radio" id="q10c" name="q10" value="c"><label for="q10c">C) Counting Sort</label></li>
                            <li><input type="radio" id="q10d" name="q10" value="d"><label for="q10d">D) Heap Sort</label></li>
                        </ul>
                    </li>
                </ol>

                <button onclick="calculateScore()">Submit</button>
                <div id="result"></div>
            </div>
        </div>
    </main>

    <footer>
        <div class="container">
            <p>&copy; 2024 MY LEARNING Labs. All rights reserved.</p>
        </div>
    </footer>

    <script>
        function calculateScore() {
            let score = 0;
            const totalQuestions = 10;

            // Get all answers
            const q1 = document.querySelector('input[name="q1"]:checked');
            const q2 = document.querySelector('input[name="q2"]:checked');
            const q3 = document.querySelector('input[name="q3"]:checked');
            const q4 = document.querySelector('input[name="q4"]:checked');
            const q5 = document.querySelector('input[name="q5"]:checked');
            const q6 = document.querySelector('input[name="q6"]:checked');
            const q7 = document.querySelector('input[name="q7"]:checked');
            const q8 = document.querySelector('input[name="q8"]:checked');
            const q9 = document.querySelector('input[name="q9"]:checked');
            const q10 = document.querySelector('input[name="q10"]:checked');

            // Check if all questions are answered
            if (!q1 || !q2 || !q3 || !q4 || !q5 || !q6 || !q7 || !q8 || !q9 || !q10) {
                document.getElementById("result").textContent = "Please answer all the questions.";
                return;
            }

            // Calculate the score based on correct answers
            const answers = {
                q1: "b", // Correct answer for question 1
                q2: "c", // Correct answer for question 2
                q3: "a", // Correct answer for question 3
                q4: "c", // Correct answer for question 4
                q5: "c", // Correct answer for question 5
                q6: "a", // Correct answer for question 6
                q7: "b", // Correct answer for question 7
                q8: "c", // Correct answer for question 8
                q9: "c", // Correct answer for question 9
                q10: "a" // Correct answer for question 10
            };

            if (q1.value === answers.q1) score++;
            if (q2.value === answers.q2) score++;
            if (q3.value === answers.q3) score++;
            if (q4.value === answers.q4) score++;
            if (q5.value === answers.q5) score++;
            if (q6.value === answers.q6) score++;
            if (q7.value === answers.q7) score++;
            if (q8.value === answers.q8) score++;
            if (q9.value === answers.q9) score++;
            if (q10.value === answers.q10) score++;

            // Display the score
            document.getElementById("result").textContent = "You scored " + score + "/" + totalQuestions;
        }
    </script>
</body>
</html>
